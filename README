Долевое строительство
---------------------
1. fractions.c
2. Читаем числа в массив, параллельно вычисляя сумму по алгоритму Кэхэна. Затем выводим все доли.

1. Сложность O(n), сложность по памяти O(n)
2. 10 млн строк за 2 секунды (если вывод перенаправить в /dev/null)
3. 2


Мегатрейдер
-----------
1. megatrader.c
2. Реализован жадный алгоритм. Читаем первые B (выбирается в зависимости от того, сколько памяти желательно использовать) позиций в массив дополнительно вычислив прибыль от покупки, затем сортируем по прибыли в убывающем порядке, читаем следующие B позиций во вторую половину того же массив, снова сортируем, повторяем пока не будет прочитан весь ввод, таким образом в массиве останется первые B позиций по прибыли. Отбираем верхние N позиций пока не исчерпаем S, выводим эти значения.

1. Сложность соответствует сложности использованного алгоритма сортировки - O(n log(n)), памяти требуется не более 2B.
2. 25 млн строк / 1,2 ГБ за 6,5 секунд
3. 7
